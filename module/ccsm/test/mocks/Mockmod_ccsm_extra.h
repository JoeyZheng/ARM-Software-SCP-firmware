/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_CCSM_EXTRA_H
#define _MOCKMOD_CCSM_EXTRA_H

#include "unity.h"
#include "mod_ccsm_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_ccsm_extra_Init(void);
void Mockmod_ccsm_extra_Destroy(void);
void Mockmod_ccsm_extra_Verify(void);




#define mod_ccsm_pll_gen_dynamic_registers_IgnoreAndReturn(cmock_retval) mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_ccsm_pll_gen_dynamic_registers_StopIgnore() mod_ccsm_pll_gen_dynamic_registers_CMockStopIgnore()
void mod_ccsm_pll_gen_dynamic_registers_CMockStopIgnore(void);
#define mod_ccsm_pll_gen_dynamic_registers_ExpectAnyArgsAndReturn(cmock_retval) mod_ccsm_pll_gen_dynamic_registers_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_ccsm_pll_gen_dynamic_registers_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_ccsm_pll_gen_dynamic_registers_ExpectAndReturn(dev_id, config, pll_reg_values, cmock_retval) mod_ccsm_pll_gen_dynamic_registers_CMockExpectAndReturn(__LINE__, dev_id, config, pll_reg_values, cmock_retval)
void mod_ccsm_pll_gen_dynamic_registers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, const struct mod_ccsm_clock_rate* config, struct mod_ccsm_pll_reg_values* pll_reg_values, int cmock_to_return);
typedef int (* CMOCK_mod_ccsm_pll_gen_dynamic_registers_CALLBACK)(fwk_id_t dev_id, const struct mod_ccsm_clock_rate* config, struct mod_ccsm_pll_reg_values* pll_reg_values, int cmock_num_calls);
void mod_ccsm_pll_gen_dynamic_registers_AddCallback(CMOCK_mod_ccsm_pll_gen_dynamic_registers_CALLBACK Callback);
void mod_ccsm_pll_gen_dynamic_registers_Stub(CMOCK_mod_ccsm_pll_gen_dynamic_registers_CALLBACK Callback);
#define mod_ccsm_pll_gen_dynamic_registers_StubWithCallback mod_ccsm_pll_gen_dynamic_registers_Stub
#define mod_ccsm_pll_gen_dynamic_registers_ExpectWithArrayAndReturn(dev_id, config, config_Depth, pll_reg_values, pll_reg_values_Depth, cmock_retval) mod_ccsm_pll_gen_dynamic_registers_CMockExpectWithArrayAndReturn(__LINE__, dev_id, config, config_Depth, pll_reg_values, pll_reg_values_Depth, cmock_retval)
void mod_ccsm_pll_gen_dynamic_registers_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, const struct mod_ccsm_clock_rate* config, int config_Depth, struct mod_ccsm_pll_reg_values* pll_reg_values, int pll_reg_values_Depth, int cmock_to_return);
#define mod_ccsm_pll_gen_dynamic_registers_ReturnThruPtr_pll_reg_values(pll_reg_values) mod_ccsm_pll_gen_dynamic_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, sizeof(struct mod_ccsm_pll_reg_values))
#define mod_ccsm_pll_gen_dynamic_registers_ReturnArrayThruPtr_pll_reg_values(pll_reg_values, cmock_len) mod_ccsm_pll_gen_dynamic_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, cmock_len * sizeof(*pll_reg_values))
#define mod_ccsm_pll_gen_dynamic_registers_ReturnMemThruPtr_pll_reg_values(pll_reg_values, cmock_size) mod_ccsm_pll_gen_dynamic_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, cmock_size)
void mod_ccsm_pll_gen_dynamic_registers_CMockReturnMemThruPtr_pll_reg_values(UNITY_LINE_TYPE cmock_line, struct mod_ccsm_pll_reg_values* pll_reg_values, size_t cmock_size);
#define mod_ccsm_pll_gen_dynamic_registers_IgnoreArg_dev_id() mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_dev_id(__LINE__)
void mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_dev_id(UNITY_LINE_TYPE cmock_line);
#define mod_ccsm_pll_gen_dynamic_registers_IgnoreArg_config() mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_config(__LINE__)
void mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define mod_ccsm_pll_gen_dynamic_registers_IgnoreArg_pll_reg_values() mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_pll_reg_values(__LINE__)
void mod_ccsm_pll_gen_dynamic_registers_CMockIgnoreArg_pll_reg_values(UNITY_LINE_TYPE cmock_line);
#define mod_ccsm_pll_gen_static_registers_IgnoreAndReturn(cmock_retval) mod_ccsm_pll_gen_static_registers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mod_ccsm_pll_gen_static_registers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_ccsm_pll_gen_static_registers_StopIgnore() mod_ccsm_pll_gen_static_registers_CMockStopIgnore()
void mod_ccsm_pll_gen_static_registers_CMockStopIgnore(void);
#define mod_ccsm_pll_gen_static_registers_ExpectAnyArgsAndReturn(cmock_retval) mod_ccsm_pll_gen_static_registers_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_ccsm_pll_gen_static_registers_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_ccsm_pll_gen_static_registers_ExpectAndReturn(dev_id, pll_reg_values, cmock_retval) mod_ccsm_pll_gen_static_registers_CMockExpectAndReturn(__LINE__, dev_id, pll_reg_values, cmock_retval)
void mod_ccsm_pll_gen_static_registers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, struct mod_ccsm_pll_reg_values* pll_reg_values, int cmock_to_return);
typedef int (* CMOCK_mod_ccsm_pll_gen_static_registers_CALLBACK)(fwk_id_t dev_id, struct mod_ccsm_pll_reg_values* pll_reg_values, int cmock_num_calls);
void mod_ccsm_pll_gen_static_registers_AddCallback(CMOCK_mod_ccsm_pll_gen_static_registers_CALLBACK Callback);
void mod_ccsm_pll_gen_static_registers_Stub(CMOCK_mod_ccsm_pll_gen_static_registers_CALLBACK Callback);
#define mod_ccsm_pll_gen_static_registers_StubWithCallback mod_ccsm_pll_gen_static_registers_Stub
#define mod_ccsm_pll_gen_static_registers_ExpectWithArrayAndReturn(dev_id, pll_reg_values, pll_reg_values_Depth, cmock_retval) mod_ccsm_pll_gen_static_registers_CMockExpectWithArrayAndReturn(__LINE__, dev_id, pll_reg_values, pll_reg_values_Depth, cmock_retval)
void mod_ccsm_pll_gen_static_registers_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, struct mod_ccsm_pll_reg_values* pll_reg_values, int pll_reg_values_Depth, int cmock_to_return);
#define mod_ccsm_pll_gen_static_registers_ReturnThruPtr_pll_reg_values(pll_reg_values) mod_ccsm_pll_gen_static_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, sizeof(struct mod_ccsm_pll_reg_values))
#define mod_ccsm_pll_gen_static_registers_ReturnArrayThruPtr_pll_reg_values(pll_reg_values, cmock_len) mod_ccsm_pll_gen_static_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, cmock_len * sizeof(*pll_reg_values))
#define mod_ccsm_pll_gen_static_registers_ReturnMemThruPtr_pll_reg_values(pll_reg_values, cmock_size) mod_ccsm_pll_gen_static_registers_CMockReturnMemThruPtr_pll_reg_values(__LINE__, pll_reg_values, cmock_size)
void mod_ccsm_pll_gen_static_registers_CMockReturnMemThruPtr_pll_reg_values(UNITY_LINE_TYPE cmock_line, struct mod_ccsm_pll_reg_values* pll_reg_values, size_t cmock_size);
#define mod_ccsm_pll_gen_static_registers_IgnoreArg_dev_id() mod_ccsm_pll_gen_static_registers_CMockIgnoreArg_dev_id(__LINE__)
void mod_ccsm_pll_gen_static_registers_CMockIgnoreArg_dev_id(UNITY_LINE_TYPE cmock_line);
#define mod_ccsm_pll_gen_static_registers_IgnoreArg_pll_reg_values() mod_ccsm_pll_gen_static_registers_CMockIgnoreArg_pll_reg_values(__LINE__)
void mod_ccsm_pll_gen_static_registers_CMockIgnoreArg_pll_reg_values(UNITY_LINE_TYPE cmock_line);
#define ccsm_send_await_request_IgnoreAndReturn(cmock_retval) ccsm_send_await_request_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_send_await_request_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_send_await_request_StopIgnore() ccsm_send_await_request_CMockStopIgnore()
void ccsm_send_await_request_CMockStopIgnore(void);
#define ccsm_send_await_request_ExpectAnyArgsAndReturn(cmock_retval) ccsm_send_await_request_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_send_await_request_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_send_await_request_ExpectAndReturn(base_address, req, cmock_retval) ccsm_send_await_request_CMockExpectAndReturn(__LINE__, base_address, req, cmock_retval)
void ccsm_send_await_request_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, enum mod_ccsm_req_type req, int cmock_to_return);
typedef int (* CMOCK_ccsm_send_await_request_CALLBACK)(uint32_t base_address, enum mod_ccsm_req_type req, int cmock_num_calls);
void ccsm_send_await_request_AddCallback(CMOCK_ccsm_send_await_request_CALLBACK Callback);
void ccsm_send_await_request_Stub(CMOCK_ccsm_send_await_request_CALLBACK Callback);
#define ccsm_send_await_request_StubWithCallback ccsm_send_await_request_Stub
#define ccsm_send_await_request_IgnoreArg_base_address() ccsm_send_await_request_CMockIgnoreArg_base_address(__LINE__)
void ccsm_send_await_request_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_send_await_request_IgnoreArg_req() ccsm_send_await_request_CMockIgnoreArg_req(__LINE__)
void ccsm_send_await_request_CMockIgnoreArg_req(UNITY_LINE_TYPE cmock_line);
#define ccsm_clear_irq_status_IgnoreAndReturn(cmock_retval) ccsm_clear_irq_status_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_clear_irq_status_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_clear_irq_status_StopIgnore() ccsm_clear_irq_status_CMockStopIgnore()
void ccsm_clear_irq_status_CMockStopIgnore(void);
#define ccsm_clear_irq_status_ExpectAnyArgsAndReturn(cmock_retval) ccsm_clear_irq_status_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_clear_irq_status_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_clear_irq_status_ExpectAndReturn(base_address, cmock_retval) ccsm_clear_irq_status_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_clear_irq_status_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_clear_irq_status_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_clear_irq_status_AddCallback(CMOCK_ccsm_clear_irq_status_CALLBACK Callback);
void ccsm_clear_irq_status_Stub(CMOCK_ccsm_clear_irq_status_CALLBACK Callback);
#define ccsm_clear_irq_status_StubWithCallback ccsm_clear_irq_status_Stub
#define ccsm_clear_irq_status_IgnoreArg_base_address() ccsm_clear_irq_status_CMockIgnoreArg_base_address(__LINE__)
void ccsm_clear_irq_status_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_clear_irq_error_IgnoreAndReturn(cmock_retval) ccsm_clear_irq_error_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_clear_irq_error_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_clear_irq_error_StopIgnore() ccsm_clear_irq_error_CMockStopIgnore()
void ccsm_clear_irq_error_CMockStopIgnore(void);
#define ccsm_clear_irq_error_ExpectAnyArgsAndReturn(cmock_retval) ccsm_clear_irq_error_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_clear_irq_error_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_clear_irq_error_ExpectAndReturn(base_address, cmock_retval) ccsm_clear_irq_error_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_clear_irq_error_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_clear_irq_error_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_clear_irq_error_AddCallback(CMOCK_ccsm_clear_irq_error_CALLBACK Callback);
void ccsm_clear_irq_error_Stub(CMOCK_ccsm_clear_irq_error_CALLBACK Callback);
#define ccsm_clear_irq_error_StubWithCallback ccsm_clear_irq_error_Stub
#define ccsm_clear_irq_error_IgnoreArg_base_address() ccsm_clear_irq_error_CMockIgnoreArg_base_address(__LINE__)
void ccsm_clear_irq_error_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_get_pll_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_settings_StopIgnore() ccsm_drv_get_pll_settings_CMockStopIgnore()
void ccsm_drv_get_pll_settings_CMockStopIgnore(void);
#define ccsm_drv_get_pll_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_pll_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_settings_ExpectAndReturn(base_address, config, cmock_retval) ccsm_drv_get_pll_settings_CMockExpectAndReturn(__LINE__, base_address, config, cmock_retval)
void ccsm_drv_get_pll_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, struct mod_ccsm_pll_reg_values* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_pll_settings_CALLBACK)(uint32_t base_address, struct mod_ccsm_pll_reg_values* config, int cmock_num_calls);
void ccsm_drv_get_pll_settings_AddCallback(CMOCK_ccsm_drv_get_pll_settings_CALLBACK Callback);
void ccsm_drv_get_pll_settings_Stub(CMOCK_ccsm_drv_get_pll_settings_CALLBACK Callback);
#define ccsm_drv_get_pll_settings_StubWithCallback ccsm_drv_get_pll_settings_Stub
#define ccsm_drv_get_pll_settings_ExpectWithArrayAndReturn(base_address, config, config_Depth, cmock_retval) ccsm_drv_get_pll_settings_CMockExpectWithArrayAndReturn(__LINE__, base_address, config, config_Depth, cmock_retval)
void ccsm_drv_get_pll_settings_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, struct mod_ccsm_pll_reg_values* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_pll_settings_ReturnThruPtr_config(config) ccsm_drv_get_pll_settings_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(struct mod_ccsm_pll_reg_values))
#define ccsm_drv_get_pll_settings_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_pll_settings_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_pll_settings_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_pll_settings_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_pll_settings_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, struct mod_ccsm_pll_reg_values* config, size_t cmock_size);
#define ccsm_drv_get_pll_settings_IgnoreArg_base_address() ccsm_drv_get_pll_settings_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_get_pll_settings_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_settings_IgnoreArg_config() ccsm_drv_get_pll_settings_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_pll_settings_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_set_pll_static_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_static_settings_StopIgnore() ccsm_drv_set_pll_static_settings_CMockStopIgnore()
void ccsm_drv_set_pll_static_settings_CMockStopIgnore(void);
#define ccsm_drv_set_pll_static_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_pll_static_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_static_settings_ExpectAndReturn(base_address, pll_select, config, cmock_retval) ccsm_drv_set_pll_static_settings_CMockExpectAndReturn(__LINE__, base_address, pll_select, config, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, enum mod_ccsm_pll_static_select pll_select, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK)(uint32_t base_address, enum mod_ccsm_pll_static_select pll_select, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_pll_static_settings_AddCallback(CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK Callback);
void ccsm_drv_set_pll_static_settings_Stub(CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK Callback);
#define ccsm_drv_set_pll_static_settings_StubWithCallback ccsm_drv_set_pll_static_settings_Stub
#define ccsm_drv_set_pll_static_settings_IgnoreArg_base_address() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreArg_pll_select() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreArg_config() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_dynamic_settings_StopIgnore() ccsm_drv_set_pll_dynamic_settings_CMockStopIgnore()
void ccsm_drv_set_pll_dynamic_settings_CMockStopIgnore(void);
#define ccsm_drv_set_pll_dynamic_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_dynamic_settings_ExpectAndReturn(base_address, pll_select, config0, config1, cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockExpectAndReturn(__LINE__, base_address, pll_select, config0, config1, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t config0, uint32_t config1, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK)(uint32_t base_address, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t config0, uint32_t config1, int cmock_num_calls);
void ccsm_drv_set_pll_dynamic_settings_AddCallback(CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK Callback);
void ccsm_drv_set_pll_dynamic_settings_Stub(CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK Callback);
#define ccsm_drv_set_pll_dynamic_settings_StubWithCallback ccsm_drv_set_pll_dynamic_settings_Stub
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_base_address() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_pll_select() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_config0() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config0(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config0(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_config1() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config1(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config1(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_get_dm_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_StopIgnore() ccsm_drv_get_dm_configuration_CMockStopIgnore()
void ccsm_drv_get_dm_configuration_CMockStopIgnore(void);
#define ccsm_drv_get_dm_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_ExpectAndReturn(base_address, config, cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectAndReturn(__LINE__, base_address, config, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_dm_configuration_CALLBACK)(uint32_t base_address, uint32_t* config, int cmock_num_calls);
void ccsm_drv_get_dm_configuration_AddCallback(CMOCK_ccsm_drv_get_dm_configuration_CALLBACK Callback);
void ccsm_drv_get_dm_configuration_Stub(CMOCK_ccsm_drv_get_dm_configuration_CALLBACK Callback);
#define ccsm_drv_get_dm_configuration_StubWithCallback ccsm_drv_get_dm_configuration_Stub
#define ccsm_drv_get_dm_configuration_ExpectWithArrayAndReturn(base_address, config, config_Depth, cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectWithArrayAndReturn(__LINE__, base_address, config, config_Depth, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_ReturnThruPtr_config(config) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(uint32_t))
#define ccsm_drv_get_dm_configuration_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_dm_configuration_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, uint32_t* config, size_t cmock_size);
#define ccsm_drv_get_dm_configuration_IgnoreArg_base_address() ccsm_drv_get_dm_configuration_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_get_dm_configuration_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_configuration_IgnoreArg_config() ccsm_drv_get_dm_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_dm_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreAndReturn(cmock_retval) ccsm_drv_get_dm_telemetry_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_StopIgnore() ccsm_drv_get_dm_telemetry_CMockStopIgnore()
void ccsm_drv_get_dm_telemetry_CMockStopIgnore(void);
#define ccsm_drv_get_dm_telemetry_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_ExpectAndReturn(base_address, telemetry1, telemetry2, telemetry3, cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectAndReturn(__LINE__, base_address, telemetry1, telemetry2, telemetry3, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* telemetry1, uint32_t* telemetry2, uint32_t* telemetry3, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK)(uint32_t base_address, uint32_t* telemetry1, uint32_t* telemetry2, uint32_t* telemetry3, int cmock_num_calls);
void ccsm_drv_get_dm_telemetry_AddCallback(CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK Callback);
void ccsm_drv_get_dm_telemetry_Stub(CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK Callback);
#define ccsm_drv_get_dm_telemetry_StubWithCallback ccsm_drv_get_dm_telemetry_Stub
#define ccsm_drv_get_dm_telemetry_ExpectWithArrayAndReturn(base_address, telemetry1, telemetry1_Depth, telemetry2, telemetry2_Depth, telemetry3, telemetry3_Depth, cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectWithArrayAndReturn(__LINE__, base_address, telemetry1, telemetry1_Depth, telemetry2, telemetry2_Depth, telemetry3, telemetry3_Depth, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* telemetry1, int telemetry1_Depth, uint32_t* telemetry2, int telemetry2_Depth, uint32_t* telemetry3, int telemetry3_Depth, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry1(telemetry1) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry1(telemetry1, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, cmock_len * sizeof(*telemetry1))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry1(telemetry1, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry1, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry2(telemetry2) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry2(telemetry2, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, cmock_len * sizeof(*telemetry2))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry2(telemetry2, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry2, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry3(telemetry3) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry3(telemetry3, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, cmock_len * sizeof(*telemetry3))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry3(telemetry3, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry3, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_base_address() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry1() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry1(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry1(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry2() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry2(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry2(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry3() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry3(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry3(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_dm_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_set_dm_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_dm_configuration_StopIgnore() ccsm_drv_set_dm_configuration_CMockStopIgnore()
void ccsm_drv_set_dm_configuration_CMockStopIgnore(void);
#define ccsm_drv_set_dm_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_dm_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_dm_configuration_ExpectAndReturn(base_address, config, cmock_retval) ccsm_drv_set_dm_configuration_CMockExpectAndReturn(__LINE__, base_address, config, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_dm_configuration_CALLBACK)(uint32_t base_address, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_dm_configuration_AddCallback(CMOCK_ccsm_drv_set_dm_configuration_CALLBACK Callback);
void ccsm_drv_set_dm_configuration_Stub(CMOCK_ccsm_drv_set_dm_configuration_CALLBACK Callback);
#define ccsm_drv_set_dm_configuration_StubWithCallback ccsm_drv_set_dm_configuration_Stub
#define ccsm_drv_set_dm_configuration_IgnoreArg_base_address() ccsm_drv_set_dm_configuration_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_set_dm_configuration_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_dm_configuration_IgnoreArg_config() ccsm_drv_set_dm_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_dm_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_get_mod_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_StopIgnore() ccsm_drv_get_mod_configuration_CMockStopIgnore()
void ccsm_drv_get_mod_configuration_CMockStopIgnore(void);
#define ccsm_drv_get_mod_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_ExpectAndReturn(base_address, core_id, config, cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectAndReturn(__LINE__, base_address, core_id, config, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t core_id, uint32_t* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_mod_configuration_CALLBACK)(uint32_t base_address, uint32_t core_id, uint32_t* config, int cmock_num_calls);
void ccsm_drv_get_mod_configuration_AddCallback(CMOCK_ccsm_drv_get_mod_configuration_CALLBACK Callback);
void ccsm_drv_get_mod_configuration_Stub(CMOCK_ccsm_drv_get_mod_configuration_CALLBACK Callback);
#define ccsm_drv_get_mod_configuration_StubWithCallback ccsm_drv_get_mod_configuration_Stub
#define ccsm_drv_get_mod_configuration_ExpectWithArrayAndReturn(base_address, core_id, config, config_Depth, cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectWithArrayAndReturn(__LINE__, base_address, core_id, config, config_Depth, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t core_id, uint32_t* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_ReturnThruPtr_config(config) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(uint32_t))
#define ccsm_drv_get_mod_configuration_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_mod_configuration_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, uint32_t* config, size_t cmock_size);
#define ccsm_drv_get_mod_configuration_IgnoreArg_base_address() ccsm_drv_get_mod_configuration_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreArg_core_id() ccsm_drv_get_mod_configuration_CMockIgnoreArg_core_id(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_core_id(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreArg_config() ccsm_drv_get_mod_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_set_mod_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_mod_configuration_StopIgnore() ccsm_drv_set_mod_configuration_CMockStopIgnore()
void ccsm_drv_set_mod_configuration_CMockStopIgnore(void);
#define ccsm_drv_set_mod_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_mod_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_mod_configuration_ExpectAndReturn(base_address, core_id, config, cmock_retval) ccsm_drv_set_mod_configuration_CMockExpectAndReturn(__LINE__, base_address, core_id, config, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t core_id, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_mod_configuration_CALLBACK)(uint32_t base_address, uint32_t core_id, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_mod_configuration_AddCallback(CMOCK_ccsm_drv_set_mod_configuration_CALLBACK Callback);
void ccsm_drv_set_mod_configuration_Stub(CMOCK_ccsm_drv_set_mod_configuration_CALLBACK Callback);
#define ccsm_drv_set_mod_configuration_StubWithCallback ccsm_drv_set_mod_configuration_Stub
#define ccsm_drv_set_mod_configuration_IgnoreArg_base_address() ccsm_drv_set_mod_configuration_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreArg_core_id() ccsm_drv_set_mod_configuration_CMockIgnoreArg_core_id(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_core_id(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreArg_config() ccsm_drv_set_mod_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_irq_error_IgnoreAndReturn(cmock_retval) ccsm_drv_get_irq_error_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_irq_error_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_irq_error_StopIgnore() ccsm_drv_get_irq_error_CMockStopIgnore()
void ccsm_drv_get_irq_error_CMockStopIgnore(void);
#define ccsm_drv_get_irq_error_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_irq_error_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_irq_error_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_irq_error_ExpectAndReturn(base_address, error, cmock_retval) ccsm_drv_get_irq_error_CMockExpectAndReturn(__LINE__, base_address, error, cmock_retval)
void ccsm_drv_get_irq_error_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* error, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_irq_error_CALLBACK)(uint32_t base_address, uint32_t* error, int cmock_num_calls);
void ccsm_drv_get_irq_error_AddCallback(CMOCK_ccsm_drv_get_irq_error_CALLBACK Callback);
void ccsm_drv_get_irq_error_Stub(CMOCK_ccsm_drv_get_irq_error_CALLBACK Callback);
#define ccsm_drv_get_irq_error_StubWithCallback ccsm_drv_get_irq_error_Stub
#define ccsm_drv_get_irq_error_ExpectWithArrayAndReturn(base_address, error, error_Depth, cmock_retval) ccsm_drv_get_irq_error_CMockExpectWithArrayAndReturn(__LINE__, base_address, error, error_Depth, cmock_retval)
void ccsm_drv_get_irq_error_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, uint32_t* error, int error_Depth, int cmock_to_return);
#define ccsm_drv_get_irq_error_ReturnThruPtr_error(error) ccsm_drv_get_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, sizeof(uint32_t))
#define ccsm_drv_get_irq_error_ReturnArrayThruPtr_error(error, cmock_len) ccsm_drv_get_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, cmock_len * sizeof(*error))
#define ccsm_drv_get_irq_error_ReturnMemThruPtr_error(error, cmock_size) ccsm_drv_get_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, cmock_size)
void ccsm_drv_get_irq_error_CMockReturnMemThruPtr_error(UNITY_LINE_TYPE cmock_line, uint32_t* error, size_t cmock_size);
#define ccsm_drv_get_irq_error_IgnoreArg_base_address() ccsm_drv_get_irq_error_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_get_irq_error_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_irq_error_IgnoreArg_error() ccsm_drv_get_irq_error_CMockIgnoreArg_error(__LINE__)
void ccsm_drv_get_irq_error_CMockIgnoreArg_error(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_set_dvfs_IgnoreAndReturn(cmock_retval) ccsm_drv_req_set_dvfs_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_dvfs_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_dvfs_StopIgnore() ccsm_drv_req_set_dvfs_CMockStopIgnore()
void ccsm_drv_req_set_dvfs_CMockStopIgnore(void);
#define ccsm_drv_req_set_dvfs_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_set_dvfs_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_dvfs_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_dvfs_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_set_dvfs_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_set_dvfs_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_set_dvfs_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_set_dvfs_AddCallback(CMOCK_ccsm_drv_req_set_dvfs_CALLBACK Callback);
void ccsm_drv_req_set_dvfs_Stub(CMOCK_ccsm_drv_req_set_dvfs_CALLBACK Callback);
#define ccsm_drv_req_set_dvfs_StubWithCallback ccsm_drv_req_set_dvfs_Stub
#define ccsm_drv_req_set_dvfs_IgnoreArg_base_address() ccsm_drv_req_set_dvfs_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_set_dvfs_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_set_dm_IgnoreAndReturn(cmock_retval) ccsm_drv_req_set_dm_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_dm_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_dm_StopIgnore() ccsm_drv_req_set_dm_CMockStopIgnore()
void ccsm_drv_req_set_dm_CMockStopIgnore(void);
#define ccsm_drv_req_set_dm_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_set_dm_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_dm_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_dm_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_set_dm_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_set_dm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_set_dm_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_set_dm_AddCallback(CMOCK_ccsm_drv_req_set_dm_CALLBACK Callback);
void ccsm_drv_req_set_dm_Stub(CMOCK_ccsm_drv_req_set_dm_CALLBACK Callback);
#define ccsm_drv_req_set_dm_StubWithCallback ccsm_drv_req_set_dm_Stub
#define ccsm_drv_req_set_dm_IgnoreArg_base_address() ccsm_drv_req_set_dm_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_set_dm_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_set_mod_IgnoreAndReturn(cmock_retval) ccsm_drv_req_set_mod_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_mod_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_mod_StopIgnore() ccsm_drv_req_set_mod_CMockStopIgnore()
void ccsm_drv_req_set_mod_CMockStopIgnore(void);
#define ccsm_drv_req_set_mod_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_set_mod_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_set_mod_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_set_mod_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_set_mod_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_set_mod_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_set_mod_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_set_mod_AddCallback(CMOCK_ccsm_drv_req_set_mod_CALLBACK Callback);
void ccsm_drv_req_set_mod_Stub(CMOCK_ccsm_drv_req_set_mod_CALLBACK Callback);
#define ccsm_drv_req_set_mod_StubWithCallback ccsm_drv_req_set_mod_Stub
#define ccsm_drv_req_set_mod_IgnoreArg_base_address() ccsm_drv_req_set_mod_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_set_mod_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_clr_mod_IgnoreAndReturn(cmock_retval) ccsm_drv_req_clr_mod_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_clr_mod_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_clr_mod_StopIgnore() ccsm_drv_req_clr_mod_CMockStopIgnore()
void ccsm_drv_req_clr_mod_CMockStopIgnore(void);
#define ccsm_drv_req_clr_mod_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_clr_mod_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_clr_mod_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_clr_mod_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_clr_mod_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_clr_mod_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_clr_mod_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_clr_mod_AddCallback(CMOCK_ccsm_drv_req_clr_mod_CALLBACK Callback);
void ccsm_drv_req_clr_mod_Stub(CMOCK_ccsm_drv_req_clr_mod_CALLBACK Callback);
#define ccsm_drv_req_clr_mod_StubWithCallback ccsm_drv_req_clr_mod_Stub
#define ccsm_drv_req_clr_mod_IgnoreArg_base_address() ccsm_drv_req_clr_mod_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_clr_mod_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_debug_IgnoreAndReturn(cmock_retval) ccsm_drv_req_debug_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_debug_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_debug_StopIgnore() ccsm_drv_req_debug_CMockStopIgnore()
void ccsm_drv_req_debug_CMockStopIgnore(void);
#define ccsm_drv_req_debug_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_debug_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_debug_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_debug_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_debug_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_debug_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_debug_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_debug_AddCallback(CMOCK_ccsm_drv_req_debug_CALLBACK Callback);
void ccsm_drv_req_debug_Stub(CMOCK_ccsm_drv_req_debug_CALLBACK Callback);
#define ccsm_drv_req_debug_StubWithCallback ccsm_drv_req_debug_Stub
#define ccsm_drv_req_debug_IgnoreArg_base_address() ccsm_drv_req_debug_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_debug_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_dvfs_go_up_IgnoreAndReturn(cmock_retval) ccsm_drv_req_dvfs_go_up_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_dvfs_go_up_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_dvfs_go_up_StopIgnore() ccsm_drv_req_dvfs_go_up_CMockStopIgnore()
void ccsm_drv_req_dvfs_go_up_CMockStopIgnore(void);
#define ccsm_drv_req_dvfs_go_up_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_dvfs_go_up_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_dvfs_go_up_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_dvfs_go_up_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_dvfs_go_up_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_dvfs_go_up_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_dvfs_go_up_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_dvfs_go_up_AddCallback(CMOCK_ccsm_drv_req_dvfs_go_up_CALLBACK Callback);
void ccsm_drv_req_dvfs_go_up_Stub(CMOCK_ccsm_drv_req_dvfs_go_up_CALLBACK Callback);
#define ccsm_drv_req_dvfs_go_up_StubWithCallback ccsm_drv_req_dvfs_go_up_Stub
#define ccsm_drv_req_dvfs_go_up_IgnoreArg_base_address() ccsm_drv_req_dvfs_go_up_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_dvfs_go_up_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_req_dvfs_go_dn_IgnoreAndReturn(cmock_retval) ccsm_drv_req_dvfs_go_dn_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_dvfs_go_dn_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_dvfs_go_dn_StopIgnore() ccsm_drv_req_dvfs_go_dn_CMockStopIgnore()
void ccsm_drv_req_dvfs_go_dn_CMockStopIgnore(void);
#define ccsm_drv_req_dvfs_go_dn_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_req_dvfs_go_dn_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_req_dvfs_go_dn_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_req_dvfs_go_dn_ExpectAndReturn(base_address, cmock_retval) ccsm_drv_req_dvfs_go_dn_CMockExpectAndReturn(__LINE__, base_address, cmock_retval)
void ccsm_drv_req_dvfs_go_dn_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t base_address, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_req_dvfs_go_dn_CALLBACK)(uint32_t base_address, int cmock_num_calls);
void ccsm_drv_req_dvfs_go_dn_AddCallback(CMOCK_ccsm_drv_req_dvfs_go_dn_CALLBACK Callback);
void ccsm_drv_req_dvfs_go_dn_Stub(CMOCK_ccsm_drv_req_dvfs_go_dn_CALLBACK Callback);
#define ccsm_drv_req_dvfs_go_dn_StubWithCallback ccsm_drv_req_dvfs_go_dn_Stub
#define ccsm_drv_req_dvfs_go_dn_IgnoreArg_base_address() ccsm_drv_req_dvfs_go_dn_CMockIgnoreArg_base_address(__LINE__)
void ccsm_drv_req_dvfs_go_dn_CMockIgnoreArg_base_address(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
